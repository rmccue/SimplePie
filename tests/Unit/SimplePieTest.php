<?php
/**
 * SimplePie
 *
 * A PHP-Based RSS and Atom Feed Framework.
 * Takes the hard work out of managing a complete RSS/Atom solution.
 *
 * Please note: This file is automatically generated by a build script. The
 * full original source is always available from http://simplepie.org/
 *
 * Copyright (c) 2004-2016, Ryan Parman, Sam Sneddon, Ryan McCue, and contributors
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification, are
 * permitted provided that the following conditions are met:
 *
 * 	* Redistributions of source code must retain the above copyright notice, this list of
 * 	  conditions and the following disclaimer.
 *
 * 	* Redistributions in binary form must reproduce the above copyright notice, this list
 * 	  of conditions and the following disclaimer in the documentation and/or other materials
 * 	  provided with the distribution.
 *
 * 	* Neither the name of the SimplePie Team nor the names of its contributors may be used
 * 	  to endorse or promote products derived from this software without specific prior
 * 	  written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS
 * AND CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 * @package SimplePie
 * @copyright 2004-2016 Ryan Parman, Sam Sneddon, Ryan McCue
 * @author Ryan Parman
 * @author Sam Sneddon
 * @author Ryan McCue
 * @link http://simplepie.org/ SimplePie
 * @license http://www.opensource.org/licenses/bsd-license.php BSD License
 */

namespace SimplePie\Tests\Unit;

use PHPUnit\Framework\TestCase;
use SimplePie\SimplePie;
use SimplePie\Tests\Fixtures\FileWithRedirectMock;
use Yoast\PHPUnitPolyfills\Polyfills\ExpectPHPException;

class SimplePieTest extends TestCase
{
	use ExpectPHPException;

	public function testNamespacedClassExists()
	{
		$this->assertTrue(class_exists('SimplePie\SimplePie'));
	}

	public function testClassExists()
	{
		$this->assertTrue(class_exists('SimplePie'));
	}

	/**
	 * Run a test using a sprintf template and data
	 *
	 * @param string $template
	 */
	private function createFeedWithTemplate($template, $data)
	{
		if (!is_array($data))
		{
			$data = array($data);
		}
		$xml = vsprintf($template, $data);
		$feed = new SimplePie();
		$feed->set_raw_data($xml);
		$feed->enable_cache(false);
		$feed->init();

		return $feed;
	}

	public static function titleDataProvider()
	{
		return array(
			array('Feed Title', 'Feed Title'),

			// RSS Profile tests
			array('AT&amp;T', 'AT&amp;T'),
			array('AT&#x26;T', 'AT&amp;T'),
			array("Bill &amp; Ted's Excellent Adventure", "Bill &amp; Ted's Excellent Adventure"),
			array("Bill &#x26; Ted's Excellent Adventure", "Bill &amp; Ted's Excellent Adventure"),
			array('The &amp; entity', 'The &amp; entity'),
			array('The &#x26; entity', 'The &amp; entity'),
			array('The &amp;amp; entity', 'The &amp;amp; entity'),
			array('The &#x26;amp; entity', 'The &amp;amp; entity'),
			array('I &lt;3 Phil Ringnalda', 'I &lt;3 Phil Ringnalda'),
			array('I &#x3C;3 Phil Ringnalda', 'I &lt;3 Phil Ringnalda'),
			array('A &lt; B', 'A &lt; B'),
			array('A &#x3C; B', 'A &lt; B'),
			array('A&lt;B', 'A&lt;B'),
			array('A&#x3C;B', 'A&lt;B'),
			array("Nice &lt;gorilla&gt; what's he weigh?", "Nice &lt;gorilla&gt; what's he weigh?"),
			array("Nice &#x3C;gorilla&gt; what's he weigh?", "Nice &lt;gorilla&gt; what's he weigh?"),
		);
	}

	/**
	 * @dataProvider titleDataProvider
	 */
	public function testTitleRSS20($title, $expected)
	{
		$data =
'<rss version="2.0">
	<channel>
		<title>%s</title>
	</channel>
</rss>';
		$feed = $this->createFeedWithTemplate($data, $title);
		$this->assertSame($expected, $feed->get_title());
	}

	/**
	 * @dataProvider titleDataProvider
	 */
	public function testTitleRSS20WithDC10($title, $expected)
	{
		$data =
'<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.0/">
	<channel>
		<dc:title>%s</dc:title>
	</channel>
</rss>';
		$feed = $this->createFeedWithTemplate($data, $title);
		$this->assertSame($expected, $feed->get_title());
	}

	/**
	 * @dataProvider titleDataProvider
	 */
	public function testTitleRSS20WithDC11($title, $expected)
	{
		$data =
'<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/">
	<channel>
		<dc:title>%s</dc:title>
	</channel>
</rss>';
		$feed = $this->createFeedWithTemplate($data, $title);
		$this->assertSame($expected, $feed->get_title());
	}

	/**
	 * @dataProvider titleDataProvider
	 */
	public function testTitleRSS20WithAtom03($title, $expected)
	{
		$data =
'<rss version="2.0" xmlns:a="http://purl.org/atom/ns#">
	<channel>
		<a:title>%s</a:title>
	</channel>
</rss>';
		$feed = $this->createFeedWithTemplate($data, $title);
		$this->assertSame($expected, $feed->get_title());
	}

	/**
	 * @dataProvider titleDataProvider
	 */
	public function testTitleRSS20WithAtom10($title, $expected)
	{
		$data =
'<rss version="2.0" xmlns:a="http://www.w3.org/2005/Atom">
	<channel>
		<a:title>%s</a:title>
	</channel>
</rss>';
		$feed = $this->createFeedWithTemplate($data, $title);
		$this->assertSame($expected, $feed->get_title());
	}

	/**
	 * Based on a test from old bug 18
	 *
	 * @dataProvider titleDataProvider
	 */
	public function testTitleRSS20WithImageTitle($title, $expected)
	{
		$data =
'<rss version="2.0">
	<channel>
		<title>%s</title>
		<image>
			<title>Image title</title>
		</image>
	</channel>
</rss>';
		$feed = $this->createFeedWithTemplate($data, $title);
		$this->assertSame($expected, $feed->get_title());
	}

	/**
	 * Based on a test from old bug 18
	 *
	 * @dataProvider titleDataProvider
	 */
	public function testTitleRSS20WithImageTitleReversed($title, $expected)
	{
		$data =
'<rss version="2.0">
	<channel>
		<image>
			<title>Image title</title>
		</image>
		<title>%s</title>
	</channel>
</rss>';
		$feed = $this->createFeedWithTemplate($data, $title);
		$this->assertSame($expected, $feed->get_title());
	}

	public function testItemWithEmptyContent()
	{
		$data =
'<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
	<channel>
		<item>
			<description>%s</description>
			<content:encoded><![CDATA[ <script> ]]></content:encoded>
		</item>
	</channel>
</rss>';
		$content = 'item description';
		$feed = $this->createFeedWithTemplate($data, $content);
		$item = $feed->get_item();
		$this->assertSame($content, $item->get_content());
	}

	public function testLegacyCallOfSetCacheClass()
	{
		if (PHP_VERSION_ID < 80000) {
			$this->expectException('SimplePie\Tests\Fixtures\Exception\SuccessException');
		} else {
			// PHP 8.0 will throw a `TypeError` for trying to call a non-static method statically.
			// This is no longer supported in PHP, so there is just no way to continue to provide BC
			// for the old non-static cache methods.
			$this->expectError();
		}

		$feed = new SimplePie();
		$feed->set_cache_class('SimplePie\Tests\Fixtures\Cache\LegacyCacheMock');
		$feed->get_registry()->register('File', 'SimplePie\Tests\Fixtures\FileMock');
		$feed->set_feed_url('http://example.com/feed/');

		$feed->init();
	}

	public function testDirectOverrideNew()
	{
		$this->expectException('SimplePie\Tests\Fixtures\Exception\SuccessException');

		$feed = new SimplePie();
		$feed->get_registry()->register('Cache', 'SimplePie\Tests\Fixtures\Cache\NewCacheMock');
		$feed->get_registry()->register('File', 'SimplePie\Tests\Fixtures\FileMock');
		$feed->set_feed_url('http://example.com/feed/');

		$feed->init();
	}

	public function testDirectOverrideLegacy()
	{
		$feed = new SimplePie();
		$feed->get_registry()->register('File', FileWithRedirectMock::class);
		$feed->enable_cache(false);
		$feed->set_feed_url('http://example.com/feed/');

		$feed->init();

		$this->assertSame('https://example.com/feed/2019-10-07', $feed->subscribe_url());
		$this->assertSame('https://example.com/feed/', $feed->subscribe_url(true));
	}

	public function getCopyrightDataProvider()
	{
		return [
			'Test Atom 0.3 DC 1.0' => [
<<<EOT
<feed version="0.3" xmlns="http://purl.org/atom/ns#" xmlns:dc="http://purl.org/dc/elements/1.0/">
	<dc:rights>Example Copyright Information</dc:rights>
</feed>
EOT
				,
				'Example Copyright Information',
			],
			'Test Atom 0.3 DC 1.1' => [
<<<EOT
<feed version="0.3" xmlns="http://purl.org/atom/ns#" xmlns:dc="http://purl.org/dc/elements/1.1/">
	<dc:rights>Example Copyright Information</dc:rights>
</feed>
EOT
				,
				'Example Copyright Information',
			],
			'Test Atom 1.0 DC 1.0' => [
<<<EOT
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.0/">
	<dc:rights>Example Copyright Information</dc:rights>
</feed>
EOT
				,
				'Example Copyright Information',
			],
			'Test Atom 1.0 DC 1.1' => [
<<<EOT
<feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
	<dc:rights>Example Copyright Information</dc:rights>
</feed>
EOT
				,
				'Example Copyright Information',
			],
			'Test Atom 1.0 Rights' => [
<<<EOT
<feed xmlns="http://www.w3.org/2005/Atom">
	<rights>Example Copyright Information</rights>
</feed>
EOT
				,
				'Example Copyright Information',
			],
			'Test RSS 0.90 Atom 1.0 Rights' => [
<<<EOT
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns="http://my.netscape.com/rdf/simple/0.9/" xmlns:a="http://www.w3.org/2005/Atom">
	<channel>
		<a:rights>Example Copyright Information</a:rights>
	</channel>
</rdf:RDF>
EOT
				,
				'Example Copyright Information',
			],
			'Test RSS 0.90 DC 1.0 Rights' => [
<<<EOT
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns="http://my.netscape.com/rdf/simple/0.9/" xmlns:dc="http://purl.org/dc/elements/1.0/">
	<channel>
		<dc:rights>Example Copyright Information</dc:rights>
	</channel>
</rdf:RDF>
EOT
				,
				'Example Copyright Information',
			],
			'Test RSS 0.90 DC 1.1 Rights' => [
<<<EOT
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns="http://my.netscape.com/rdf/simple/0.9/" xmlns:dc="http://purl.org/dc/elements/1.1/">
	<channel>
		<dc:rights>Example Copyright Information</dc:rights>
	</channel>
</rdf:RDF>
EOT
				,
				'Example Copyright Information',
			],
			'Test RSS 0.91-Netscape Atom 1.0 Rights' => [
<<<EOT
<!DOCTYPE rss SYSTEM "http://my.netscape.com/publish/formats/rss-0.91.dtd">
<rss version="0.91" xmlns:a="http://www.w3.org/2005/Atom">
	<channel>
		<a:rights>Example Copyright Information</a:rights>
	</channel>
</rss>
EOT
				,
				'Example Copyright Information',
			],
			'Test RSS 0.91-Netscape DC 1.0 Rights' => [
<<<EOT
<!DOCTYPE rss SYSTEM "http://my.netscape.com/publish/formats/rss-0.91.dtd">
<rss version="0.91" xmlns:dc="http://purl.org/dc/elements/1.0/">
	<channel>
		<dc:rights>Example Copyright Information</dc:rights>
	</channel>
</rss>
EOT
				,
				'Example Copyright Information',
			],
			'Test RSS 0.91-Netscape DC 1.1 Rights' => [
<<<EOT
<!DOCTYPE rss SYSTEM "http://my.netscape.com/publish/formats/rss-0.91.dtd">
<rss version="0.91" xmlns:dc="http://purl.org/dc/elements/1.1/">
	<channel>
		<dc:rights>Example Copyright Information</dc:rights>
	</channel>
</rss>
EOT
				,
				'Example Copyright Information',
			],
			'Test RSS 0.91-Netscape Copyright' => [
<<<EOT
<!DOCTYPE rss SYSTEM "http://my.netscape.com/publish/formats/rss-0.91.dtd">
<rss version="0.91">
	<channel>
		<copyright>Example Copyright Information</copyright>
	</channel>
</rss>
EOT
				,
				'Example Copyright Information',
			],
			'Test RSS 0.91-Userland Atom 1.0 Rights' => [
<<<EOT
<rss version="0.91" xmlns:a="http://www.w3.org/2005/Atom">
	<channel>
		<a:rights>Example Copyright Information</a:rights>
	</channel>
</rss>
EOT
				,
				'Example Copyright Information',
			],
			'Test RSS 0.91-Userland DC 1.0 Rights' => [
<<<EOT
<rss version="0.91" xmlns:dc="http://purl.org/dc/elements/1.0/">
	<channel>
		<dc:rights>Example Copyright Information</dc:rights>
	</channel>
</rss>
EOT
				,
				'Example Copyright Information',
			],
			'Test RSS 0.91-Userland DC 1.0 Rights' => [
<<<EOT
<rss version="0.91" xmlns:dc="http://purl.org/dc/elements/1.1/">
	<channel>
		<dc:rights>Example Copyright Information</dc:rights>
	</channel>
</rss>
EOT
				,
				'Example Copyright Information',
			],
			'Test RSS 0.91-Userland Copyright' => [
<<<EOT
<rss version="0.91">
	<channel>
		<copyright>Example Copyright Information</copyright>
	</channel>
</rss>
EOT
				,
				'Example Copyright Information',
			],
			'Test RSS 0.92 Atom 1.0 Rights' => [
<<<EOT
<rss version="0.92" xmlns:a="http://www.w3.org/2005/Atom">
	<channel>
		<a:rights>Example Copyright Information</a:rights>
	</channel>
</rss>
EOT
				,
				'Example Copyright Information',
			],
			'Test RSS 0.92 DC 1.0 Rights' => [
<<<EOT
<rss version="0.92" xmlns:dc="http://purl.org/dc/elements/1.0/">
	<channel>
		<dc:rights>Example Copyright Information</dc:rights>
	</channel>
</rss>
EOT
				,
				'Example Copyright Information',
			],
			'Test RSS 0.92 DC 1.1 Rights' => [
<<<EOT
<rss version="0.92" xmlns:dc="http://purl.org/dc/elements/1.1/">
	<channel>
		<dc:rights>Example Copyright Information</dc:rights>
	</channel>
</rss>
EOT
				,
				'Example Copyright Information',
			],
			'Test RSS 0.92 Copyright' => [
<<<EOT
<rss version="0.92">
	<channel>
		<copyright>Example Copyright Information</copyright>
	</channel>
</rss>
EOT
				,
				'Example Copyright Information',
			],
			'Test RSS 1.0 Atom 1.0 Rights' => [
<<<EOT
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns="http://purl.org/rss/1.0/" xmlns:a="http://www.w3.org/2005/Atom">
	<channel>
		<a:rights>Example Copyright Information</a:rights>
	</channel>
</rdf:RDF>
EOT
				,
				'Example Copyright Information',
			],
			'Test RSS 1.0 DC 1.0 Rights' => [
<<<EOT
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns="http://purl.org/rss/1.0/" xmlns:dc="http://purl.org/dc/elements/1.0/">
	<channel>
		<dc:rights>Example Copyright Information</dc:rights>
	</channel>
</rdf:RDF>
EOT
				,
				'Example Copyright Information',
			],
			'Test RSS 1.0 DC 1.1 Rights' => [
<<<EOT
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns="http://purl.org/rss/1.0/" xmlns:dc="http://purl.org/dc/elements/1.1/">
	<channel>
		<dc:rights>Example Copyright Information</dc:rights>
	</channel>
</rdf:RDF>
EOT
				,
				'Example Copyright Information',
			],
			'Test RSS 2.0 Atom 1.0 Rights' => [
<<<EOT
<rss version="2.0" xmlns:a="http://www.w3.org/2005/Atom">
	<channel>
		<a:rights>Example Copyright Information</a:rights>
	</channel>
</rss>
EOT
				,
				'Example Copyright Information',
			],
			'Test RSS 2.0 DC 1.0 Rights' => [
<<<EOT
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.0/">
	<channel>
		<dc:rights>Example Copyright Information</dc:rights>
	</channel>
</rss>
EOT
				,
				'Example Copyright Information',
			],
			'Test RSS 2.0 DC 1.1 Rights' => [
<<<EOT
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/">
	<channel>
		<dc:rights>Example Copyright Information</dc:rights>
	</channel>
</rss>
EOT
				,
				'Example Copyright Information',
			],
			'Test RSS 2.0 Copyright' => [
<<<EOT
<rss version="2.0">
	<channel>
		<copyright>Example Copyright Information</copyright>
	</channel>
</rss>
EOT
				,
				'Example Copyright Information',
			],
		];
	}

	/**
	 * @dataProvider getCopyrightDataProvider
	 */
	public function test_get_copyright($data, $expected)
	{
		$feed = new SimplePie();
		$feed->set_raw_data($data);
		$feed->enable_cache(false);
		$feed->init();

		$this->assertSame($expected, $feed->get_copyright());
	}
}
